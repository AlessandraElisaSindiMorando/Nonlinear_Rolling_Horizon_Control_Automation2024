function createaxes(XSim_x, XSim_y, Ref_x, Ref_y, safetyRegion_y, ...
    safetyRegion_x, xObs, yObs)
%CREATEAXES Create figure plotting the results
%  XSim_x:  x-position of the UGV over the entire simulation horizon sampled 
% with sample time Ts = 0.1s
%  XSim_y:  y-position of the UGV over the entire simulation horizon sampled 
% with sample time Ts = 0.1s
%  Ref_x:  x reference position of the UGV over the entire simulation horizon 
% sampled with sample time Ts = 1s
%  Ref_y:  y reference position of the UGV over the entire simulation horizon 
% sampled with sample time Ts = 1s
%  safetyRegion_y:  
%  safetyRegion_x:  
%  xObs:  vector of plot x data
%  yObs:  vector of plot y data

%  Code obtained by modifing the auto-generated by MATLAB

% Create axes
axes1 = axes;
hold(axes1,'on');

% Create patch representing the safety region
patch('DisplayName','d_{Safe}','YData',safetyRegion_y,'XData', ...
    safetyRegion_x,...
    'FaceColor',[0.706 0.706 0.722],...
    'EdgeColor','none');

% Plot the UGV trajectory
plot(XSim_x,XSim_y,'DisplayName','XY Traj.','Color',[0 0 0]);

% Plot the UGV reference
plot(Ref_x,Ref_y,'DisplayName','XY Ref.','LineStyle','--','Color', [0 0 0]);

% Plot the (x,y)-position of the UGV
plot(xObs,yObs,'DisplayName','Obstacle','Marker','x','LineStyle','none',...
    'Color',[0 0 0]);

% Create ylabel
ylabel('Y [m]','FontSize',11,'FontName','times new roman');

% Create xlabel
xlabel('X [m]','FontSize',11,'FontName','times new roman');

box(axes1,'on');
hold(axes1,'off');
grid on
axis equal
xlim([-3, 3]);
ylim([-3, 3]);
legend('show');
fontsize(axes1,16,"points")

set(gcf,'position',[100,100,1000,1000])
%set(gcf, 'color', 'none');    
set(gca, 'color', 'none');
% exportgraphics(gcf,'trajectory.eps',...   % since R2020a
%     'ContentType','vector',...
%      'BackgroundColor','none')

